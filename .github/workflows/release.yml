name: release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME_FULL: ghcr.io/gostamp/golang-full
  IMAGE_NAME_SLIM: ghcr.io/gostamp/golang-slim

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3.5.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # pin@v2.5.0

      - name: Set up Cosign
        uses: sigstore/cosign-installer@9e9de2292db7abb3f51b7f4808d98f0d347a8919 # pin@v3.0.2

      - name: Log in to the container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for full image
        id: meta-full
        uses: docker/metadata-action@2c0bd771b40637d97bf205cbccdd294a32112176 # pin@v4.5.0
        with:
          images: ${{ env.IMAGE_NAME_FULL }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push full image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pin@v4.0.0
        with:
          push: true
          build-args: |
            APP_TARGET=full
          context: .
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME_FULL }}:latest
            type=registry,ref=${{ env.IMAGE_NAME_FULL }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME_FULL }}:buildcache,mode=max
          labels: ${{ steps.meta-full.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.meta-full.outputs.tags }}
          target: full

      - name: Sign full image
        run: echo "$TAGS" | xargs -n1 -d '\n' cosign sign --recursive --yes
        env:
          TAGS: ${{ steps.meta-full.outputs.tags }}

      - name: Extract metadata for slim image
        id: meta-slim
        uses: docker/metadata-action@2c0bd771b40637d97bf205cbccdd294a32112176 # pin@v4.5.0
        with:
          images: ${{ env.IMAGE_NAME_SLIM }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push slim image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pin@v4.0.0
        with:
          push: true
          build-args: |
            APP_TARGET=slim
          context: .
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME_SLIM }}:latest
            type=registry,ref=${{ env.IMAGE_NAME_SLIM }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME_SLIM }}:buildcache,mode=max
          labels: ${{ steps.meta-slim.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.meta-slim.outputs.tags }}
          target: slim

      - name: Sign slim image
        run: echo "$TAGS" | xargs -n1 -d '\n' cosign sign --recursive --yes
        env:
          TAGS: ${{ steps.meta-slim.outputs.tags }}
